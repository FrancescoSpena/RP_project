[01m[K/home/francesco/Desktop/RP_project/src/project_localizer/src/publisher_node.cpp:[m[K In function â€˜[01m[Kvoid mapCallBack(const OccupancyGrid&)[m[Kâ€™:
[01m[K/home/francesco/Desktop/RP_project/src/project_localizer/src/publisher_node.cpp:35:50:[m[K [01;31m[Kerror: [m[Kinvalid conversion from â€˜[01m[Kint8_t[m[Kâ€™ {aka â€˜[01m[Ksigned char[m[Kâ€™} to â€˜[01m[Kconst CellType*[m[Kâ€™ {aka â€˜[01m[Kconst signed char*[m[Kâ€™} [[01;31m[K-fpermissive[m[K]
   35 |                 obstacles.push_back(grid.ptr2idx([01;31m[Kg[m[K));
      |                                                  [01;31m[K^[m[K
      |                                                  [01;31m[K|[m[K
      |                                                  [01;31m[Kint8_t {aka signed char}[m[K
In file included from [01m[K/home/francesco/Desktop/RP_project/src/project_localizer/src/publisher_node.cpp:4[m[K:
[01m[K/home/francesco/Desktop/RP_project/src/project_localizer/src/rp_stuff/grid.h:56:49:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kconst Vector2i Grid_<CellType_>::ptr2idx(const CellType*) const [with CellType_ = signed char; Vector2i = Eigen::Matrix<int, 2, 1>; Grid_<CellType_>::CellType = signed char][m[Kâ€™
   56 |   inline const Vector2i ptr2idx([01;36m[Kconst CellType* cell[m[K) const {
      |                                 [01;36m[K~~~~~~~~~~~~~~~~^~~~[m[K
make[2]: *** [CMakeFiles/publisher_node.dir/build.make:63: CMakeFiles/publisher_node.dir/src/publisher_node.cpp.o] Error 1
make[1]: *** [CMakeFiles/Makefile2:323: CMakeFiles/publisher_node.dir/all] Error 2
make: *** [Makefile:141: all] Error 2
